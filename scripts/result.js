// 從 localStorage 讀取使用者的選擇資料，若無資料則預設建立一個 10x5 的零矩陣
const chose = JSON.parse(localStorage.getItem("chose")) || Array.from({ length: 10 }, () => Array(5).fill(0));

// 定義 10 個問題、每題 5 個選項、9 種風險類別的權重矩陣
// 釣魚、投資、求職、愛情、不容易被詐騙、分期付款、假冒親友、網購、愛心公益
const cal = [
  // 你最怕的社交場合是？
  [
    [100, 0, 0, 0, 0, 2, 0, 0, 0],  // 跟完全不熟的人吃飯
    [1, 100, 2, 0, 0, 0, 0, 2, 0],  // 要發言的大會議
    [3, 0, 100, 0, 0, 0, 2, 0, 0],  // 相親或聯誼
    [0, 0, 0, 100, 2, 0, 0, 0, 0],  // 親戚聚餐
    [0, 0, 0, 0, 100, 0, 0, 0, 0]   // 不怕，反而喜歡
  ],
  // 面對突如其來的改變，你通常會？
  [
    [3, 0, 1, 0, 0, 1000, 0, 0, 2],  // 先驚慌，再慢慢調整
    [0, 6, 0, 2, 0, 0, 1000, 2, 0],  // 馬上想解決方法
    [2, 0, 4, 0, 2, 0, 2, 1000, 0],  // 冷靜觀察局勢
    [0, 2, 0, 8, 0, 0, 0, 0, 1000],  // 先抱怨一輪
    [0, 0, 2, 0, 8, 0, 0, 0, 0]   // 覺得有趣，躍躍欲試
  ],
  // 你喜歡的朋友類型是？
  [
    [5, 0, 0, 0, 0, 2, 0, 3, 0],  // 永遠正能量的陽光型
    [0, 2, 4, 0, 0, 0, 0, 2, 2],  // 可以一起耍廢的懶人型
    [3, 0, 0, 5, 2, 0, 0, 0, 0],  // 能傾聽並給建議的理性型
    [0, 4, 0, 6, 0, 0, 0, 0, 0],  // 古靈精怪，充滿創意型
    [0, 0, 2, 0, 8, 0, 0, 0, 0]   // 默契滿滿，不用多話型
  ],
  // 你對「規劃未來」的態度是？
  [
    [3, 2, 0, 0, 0, 0, 5, 0, 0],  // 每一步都要計畫
    [1, 5, 2, 0, 0, 2, 0, 0, 0],  // 有大方向就好
    [3, 0, 5, 0, 0, 0, 0, 2, 0],  // 船到橋頭自然直
    [0, 0, 0, 8, 2, 0, 0, 0, 0],  // 覺得沒意義
    [0, 0, 0, 0, 10, 0, 0, 0, 0]   // 假裝有規劃，其實放任
  ],
  // 朋友說你「很難懂」，你會？
  [
    [5, 1, 1, 0, 0, 0, 3, 0, 0],  // 驚訝：我以為我很好懂
    [0, 4, 2, 2, 0, 0, 0, 2, 0],  // 默默記在心裡
    [1, 0, 5, 0, 2, 0, 2, 0, 0],  // 反問對方哪裡難懂
    [1, 0, 0, 5, 2, 0, 0, 2, 0],  // 大笑說你終於發現了
    [0, 0, 0, 0, 10, 0, 0, 0, 0]   // 根本不在意
  ],
  // 你最常出現在社群媒體的時段是？
  [
    [3, 2, 0, 0, 0, 4, 0, 3, 0],  // 起床第一件事
    [0, 4, 2, 0, 2, 0, 0, 0, 2],  // 午餐時間
    [2, 0, 4, 2, 0, 0, 2, 0, 0],  // 下班下課後
    [0, 0, 0, 8, 2, 0, 0, 0, 0],  // 睡前滑到眼花
    [0, 0, 2, 0, 8, 0, 0, 0, 0]   // 幾乎不上社群
  ],
  // 你的桌面是？
  [
    [5, 0, 0, 0, 0, 2, 3, 0, 0],  // 完全整齊
    [0, 5, 2, 0, 0, 0, 0, 3, 0],  // 有系統地亂
    [2, 0, 4, 0, 2, 0, 2, 0, 0],  // 看似亂但我知道東西在哪
    [0, 2, 0, 6, 2, 0, 0, 0, 0],  // 雜亂無章
    [0, 0, 2, 0, 8, 0, 0, 0, 0]   // 沒有桌面，筆電放床上用
  ],
  // 收到生日祝福時，你的反應是？
  [
    [4, 1, 0, 0, 0, 3, 0, 4, 0],  // 一一回覆每個人
    [0, 3, 2, 0, 2, 0, 0, 0, 3],  // 發一篇感謝文就好
    [2, 0, 4, 2, 0, 0, 2, 0, 0],  // 偷偷感動
    [0, 0, 0, 6, 2, 2, 0, 0, 0],  // 忘記回（但內心超開心）
    [0, 0, 2, 0, 8, 0, 0, 0, 0]   // 其實覺得壓力大
  ],
  // 如果可以許一個願望，你想許什麼願望？（這個願望和哪個方面最有關係呢？）
  [
    [5, 2, 0, 0, 0, 0, 3, 0, 0],  // 財富
    [0, 4, 2, 0, 0, 2, 0, 2, 0],  // 權利
    [2, 0, 4, 0, 2, 0, 2, 0, 0],  // 壽命
    [0, 0, 0, 3, 2, 0, 0, 0, 5],  // 愛情
    [0, 0, 0, 0, 10, 0, 0, 0, 0]   // 友情
  ],
  // 你覺得所謂的貴人是？（最接近下列何者？）
  [
    [4, 1, 0, 0, 0, 2, 0, 3, 1],  // 帶你享受生活的人
    [0, 4, 2, 0, 2, 0, 0, 2, 0],  // 帶你賺大錢的人
    [2, 0, 4, 2, 0, 0, 2, 0, 0],  // 讓你提升自我的人
    [0, 0, 0, 8, 2, 0, 0, 0, 0],  // 讓你看破現實的人
    [0, 0, 2, 0, 8, 0, 0, 0, 0]   // 在人生低谷伸出援手的人
  ]
];

// 初始化九種風險類別的分數（索引 0～8 分別對應各風險）
const scores = Array(9).fill(0);

// 根據使用者每題的選擇累計分數
for (let q = 0; q < 10; q++) {
  for (let opt = 0; opt < 5; opt++) {
    if (chose[q][opt] === 1) {
      for (let cat = 0; cat < 9; cat++) {
        scores[cat] += cal[q][opt][cat];
      }
    }
  }
}

// 找出分數最高的風險類別（若平手則取第一個出現的）
let maxIndex = 0;
scores.forEach((score, index) => {
  if (score > scores[maxIndex]) {
    maxIndex = index;
  }
});

// 根據最高得分的風險類別導向對應結果頁面
// 對應關係：風險類別 0 -> result1.html, 1 -> result2.html, ..., 8 -> result9.html
const targetPage = `../results_pages/result${maxIndex + 1}.html`;
window.location.href = targetPage;
